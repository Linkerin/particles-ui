@use 'sass:map';

@use '../../styles/particles-ui/variables' as var;

$icon-side-pd: 0.5714286em;
$sizes-mapping: (
  'sm': 'md',
  'md': 'lg',
  'lg': 'xl'
);

@mixin size($size) {
  $label: map.get(var.$typography, 'label', map.get($sizes-mapping, $size));

  :where(.#{$size}) {
    @each $key, $value in $label {
      #{$key}: $value;
    }

    $dimension: map.get($label, 'line-height');
    $pd: 1px;

    & > :where(span[data-pui-component='chip-icon']) {
      font-size: calc($dimension - $pd * 2);
    }

    & > :where(button[data-pui-component='close-btn']) {
      padding: $pd;

      & > :where(span[data-pui-component='btn-icon']) {
        font-size: map.get($label, 'font-size');
      }
    }
  }
}

:where(.chip) {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: var(--pui-gap-md, 0.5rem);
  border: 1px solid transparent;
  color: var(--pui-on-background);
  cursor: pointer;
  padding: 0.35714286em 1.142857em;
  height: fit-content;
  width: fit-content;
  white-space: nowrap;

  &:where(.static) {
    cursor: default;
  }

  & > :where(span[data-pui-component='chip-icon']) {
    display: flex;
    align-items: center;
    justify-content: center;

    :where(svg) {
      height: 1em;
      min-width: 1em;
      width: auto;
    }
  }

  &:hover:not(.disabled):not(:where(.static)) {
    background-color: rgb(
      var(--pui-on-background-channels) / var(--pui-state-hover, 0.08)
    );
  }

  &:active:not(.disabled):not(:where(.static)) {
    background-color: rgb(
      var(--pui-on-background-channels) / var(--pui-state-press, 0.12)
    );
  }

  &.disabled {
    color: rgb(
      var(--pui-on-background-channels) /
        var(--pui-state-disabled-content, 0.38)
    );
    cursor: not-allowed;
    box-shadow: none;
  }
}

:where(.outlined) {
  border-color: var(--pui-outline);

  &.disabled {
    border-color: rgb(
      var(--pui-on-background-channels) / var(--pui-state-disabled, 0.12)
    );
  }
}

:where(.elevated) {
  background-color: var(--pui-background-container-low);
  box-shadow: var(--pui-elevation-1);

  &:hover:not(.disabled):not(:where(.static)) {
    box-shadow: var(--pui-elevation-2);
  }

  &.disabled {
    background-color: rgb(
      var(--pui-on-background-channels / var(--pui-state-disabled, 0.12))
    );
  }
}

:where(.leftIcon) {
  padding-left: $icon-side-pd;
}

:where(.rightIcon) {
  padding-right: $icon-side-pd;
}

// Icon colors
@each $color in ('primary', 'secondary', 'tertiary') {
  :where(.#{$color}) {
    color: var(--pui-#{$color});
  }
}

@each $size in ('sm', 'md', 'lg') {
  @include size($size);
}
